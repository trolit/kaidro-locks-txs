{"version":3,"sources":["/src/components/SynergySummary.vue","/src/helpers/sleep.ts","/src/helpers/debug.ts","/src/components/TransactionHref.vue","/src/App.vue","/src/components/TransactionsSummary.vue","/src/helpers/decodeAkdrValue.ts","/src/index.ts","/src/assets/constants.ts","/src/store/useHttpServiceStore.ts","/0plugin-vue:export-helper","/src/store/useDayjsStore.ts","/src/helpers/getOffsetByPageNumber.ts"],"sourcesContent":["<template>\r\n  <el-card shadow=\"always\">\r\n    <template #header>\r\n      Your synergy summary<br />\r\n      <el-text type=\"info\" size=\"small\">\r\n        *based on collected lock purchases</el-text\r\n      >\r\n    </template>\r\n\r\n    <em v-if=\"isLoading\">Loading...</em>\r\n\r\n    <em v-else-if=\"!data.length\">No data</em>\r\n\r\n    <el-scrollbar v-else height=\"400px\">\r\n      <el-row\r\n        class=\"synergy-week\"\r\n        :gutter=\"20\"\r\n        v-for=\"(\r\n          { from, to, label, transactions }, synergyWeekIndex\r\n        ) in summaryData\"\r\n        :key=\"synergyWeekIndex\"\r\n        :style=\"{ padding: 0, margin: 0 }\"\r\n      >\r\n        <el-col :span=\"10\" class=\"range\">\r\n          <small>\r\n            <el-text size=\"small\" type=\"warning\">\r\n              Week {{ synergyWeekIndex + 1 }}\r\n            </el-text>\r\n            <br />\r\n            {{ from }} GMT <br />\r\n            {{ to }} GMT\r\n          </small>\r\n        </el-col>\r\n\r\n        <el-col :span=\"10\" class=\"transactions\">\r\n          <el-text\r\n            v-if=\"transactions.length\"\r\n            size=\"small\"\r\n            v-for=\"(transaction, tranasctionIndex) in transactions\"\r\n            :key=\"tranasctionIndex\"\r\n          >\r\n            <transaction-href\r\n              :transaction-hash=\"transaction.transactionHash\"\r\n              :text=\"`txs${tranasctionIndex + 1}&nbsp;`\"\r\n            />\r\n          </el-text>\r\n\r\n          <el-text v-else>{{ label }}</el-text>\r\n        </el-col>\r\n\r\n        <div class=\"space\" v-if=\"!isLastElement(synergyWeekIndex)\" />\r\n      </el-row>\r\n    </el-scrollbar>\r\n  </el-card>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { PropType } from \"vue\";\r\nimport TransactionHref from \"./TransactionHref.vue\";\r\nimport { useDayjsStore } from \"@/store/useDayjsStore\";\r\nimport { RAW_SYNERGY_WEEKS } from \"@/assets/constants\";\r\nimport { ITransactionSummary } from \"@/types/ITransactionSummary\";\r\n\r\nexport default {\r\n  components: {\r\n    TransactionHref,\r\n  },\r\n\r\n  props: {\r\n    isLoading: {\r\n      type: Boolean,\r\n      required: true,\r\n    },\r\n\r\n    data: {\r\n      type: Array as PropType<ITransactionSummary[]>,\r\n      required: true,\r\n    },\r\n  },\r\n\r\n  data() {\r\n    const dayjsStore = useDayjsStore();\r\n\r\n    return {\r\n      dayjsStore,\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    translatedSynergyWeeks() {\r\n      return RAW_SYNERGY_WEEKS.map(({ from, to }) => {\r\n        return {\r\n          from: this.dayjsStore.parseToTimezoneAndFormat(from),\r\n          to: this.dayjsStore.parseToTimezoneAndFormat(to),\r\n\r\n          fromUnix: this.dayjsStore.getTimestampInSeconds(from),\r\n          toUnix: this.dayjsStore.getTimestampInSeconds(to),\r\n        };\r\n      });\r\n    },\r\n\r\n    summaryData() {\r\n      let isFirstSynergy = false;\r\n\r\n      return this.translatedSynergyWeeks.map(\r\n        ({ from, to, fromUnix, toUnix }) => {\r\n          let label = \"N/A\";\r\n          const transactions = this.getTransactions(fromUnix, toUnix);\r\n\r\n          if (transactions.length !== 0) {\r\n            isFirstSynergy = true;\r\n          } else if (transactions.length === 0 && isFirstSynergy) {\r\n            label = \"Missed\";\r\n          } else {\r\n            label = \"Not participated\";\r\n          }\r\n\r\n          return {\r\n            from,\r\n            to,\r\n            label,\r\n            transactions,\r\n          };\r\n        },\r\n      );\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    convertBlocktime(blockTime: number) {\r\n      return this.dayjsStore.blockTimeToDate(blockTime);\r\n    },\r\n\r\n    isLastElement(index: number) {\r\n      return this.translatedSynergyWeeks.length - 1 === index;\r\n    },\r\n\r\n    getTransactions(fromUnix: number, toUnix: number) {\r\n      return this.data.filter(transactionSummary => {\r\n        console.log(\r\n          `${fromUnix} - ${transactionSummary.blockTime} - ${toUnix}`,\r\n        );\r\n\r\n        return (\r\n          transactionSummary.blockTime > fromUnix &&\r\n          transactionSummary.blockTime <= toUnix\r\n        );\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n","export function sleep(seconds: number) {\n  if (!seconds || seconds < 0) {\n    throw new Error(`Seconds arg '${seconds}' is invalid}!`);\n  }\n\n  if (seconds > 30) {\n    throw new Error(\n      `You tried to invoke sleep for ${seconds} seconds. Seems like typo.`,\n    );\n  }\n\n  return new Promise(resolve => setTimeout(resolve, seconds * 1000));\n}\n","export function debug(message: string) {\n  if (\"1\" !== \"1\") {\n    return;\n  }\n\n  console.log(`%cDEBUG:%c${message}`, \"color: yellow;\");\n}\n","<template>\r\n  <el-link :href=\"getHref(transactionHash)\" target=\"_blank\" type=\"primary\">\r\n    {{ text }}\r\n  </el-link>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nexport default {\r\n  props: {\r\n    transactionHash: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n\r\n    text: {\r\n      type: String,\r\n      required: false,\r\n      default: () => \"txs\",\r\n    },\r\n  },\r\n\r\n  data() {\r\n    const TX_URL = process.env.FARM_TX_URL;\r\n\r\n    return {\r\n      TRANSACTION_DETAILS_URL: TX_URL,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    getHref(blockHash: string) {\r\n      return `${this.TRANSACTION_DETAILS_URL}/${blockHash}`;\r\n    },\r\n  },\r\n};\r\n</script>\r\n","<template>\n  <el-container direction=\"vertical\" class=\"app\">\n    <el-row :gutter=\"18\" class=\"data\">\n      <el-col :xs=\"18\" :sm=\"18\" :md=\"18\" :lg=\"5\" :xl=\"5\">\n        <el-input\n          v-model=\"walletAddress\"\n          placeholder=\"paste your wallet address, 0x...\"\n        />\n      </el-col>\n\n      <el-col :xs=\"18\" :sm=\"18\" :md=\"18\" :lg=\"5\" :xl=\"5\">\n        <el-button\n          type=\"primary\"\n          @click=\"onSubmit\"\n          :loading=\"isLoading\"\n          :disabled=\"isWalletAddressEmpty\"\n        >\n          Find my transactions\n        </el-button>\n      </el-col>\n    </el-row>\n\n    <el-row :gutter=\"18\">\n      <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"5\" :xl=\"5\">\n        <transactions-summary\n          :is-loading=\"isLoading\"\n          :data=\"matchedAkdrTransactionsData\"\n        >\n          <template #header>\n            A-KDR locks transactions<br />\n            <el-link\n              href=\"https://app.roninchain.com/token/0xe3c587e40e9b89b3f2af526c9d468d49a66e3c2d?p=1&ps=25\"\n              target=\"_blank\"\n              type=\"primary\"\n            >\n              token\n            </el-link>\n          </template>\n        </transactions-summary>\n      </el-col>\n\n      <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"5\" :xl=\"5\">\n        <transactions-summary\n          :is-loading=\"isLoading\"\n          :data=\"matchedRonTransactionsData\"\n        >\n          <template #header>\n            RON locks transactions<br />\n            <el-link\n              href=\"https://app.roninchain.com/address/0xfd7ee5e1dfa1990c3cc6742eaae4bcf1ff6b516e?p=1&ps=25\"\n              target=\"_blank\"\n              type=\"primary\"\n            >\n              Kaidro Synergy Payments\n            </el-link>\n          </template>\n        </transactions-summary>\n      </el-col>\n\n      <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"8\" :xl=\"8\">\n        <synergy-summary :is-loading=\"isLoading\" :data=\"matchedTransactions\" />\n      </el-col>\n    </el-row>\n\n    <footer>\n      This tool is not associated with Kaidro team. You should not treat is as\n      final evidence when discussing A-KDR conversion rate\n    </footer>\n  </el-container>\n</template>\n\n<script lang=\"ts\">\nimport { debug } from \"./helpers/debug\";\nimport { sleep } from \"@/helpers/sleep\";\nimport myJsonData from \"@/assets/01072024.json\";\nimport { decodeAkdrValue } from \"./helpers/decodeAkdrValue\";\nimport SynergySummary from \"./components/SynergySummary.vue\";\nimport { ITransactionSummary } from \"./types/ITransactionSummary\";\nimport { useHttpServiceStore } from \"@/store/useHttpServiceStore\";\nimport TransactionsSummary from \"./components/TransactionsSummary.vue\";\nimport {\n  MAX_PAGES_TO_FETCH_LIMIT,\n  DELAY_BETWEEN_EACH_REQUEST_IN_SECONDS,\n  LAST_SYNERGY_BEFORE_TGE_TIMESTAMP_IN_SECONDS,\n  TRANSACTION_HASH_OF_KAIDRO_REVERTING_SOME_AKDR,\n} from \"@/assets/constants\";\n\nexport default {\n  components: {\n    SynergySummary,\n    TransactionsSummary,\n  },\n\n  data() {\n    const httpService = useHttpServiceStore();\n\n    return {\n      httpService,\n      walletAddress: \"\",\n      isLoading: false,\n      matchedTransactions: <ITransactionSummary[]>[],\n    };\n  },\n\n  computed: {\n    isWalletAddressEmpty() {\n      return this.walletAddress.trim().length === 0;\n    },\n\n    matchedAkdrTransactionsData() {\n      return this.matchedTransactions.filter(\n        transaction => transaction.tokenSymbol === \"A-KDR\",\n      );\n    },\n\n    matchedRonTransactionsData() {\n      return this.matchedTransactions.filter(\n        transaction => transaction.tokenSymbol === \"RON\",\n      );\n    },\n  },\n\n  methods: {\n    reset() {\n      this.matchedTransactions = [];\n    },\n\n    async onSubmit() {\n      this.isLoading = true;\n\n      this.reset();\n\n      await this.fetchAkdrTransactions();\n\n      this.fetchRonTransactions();\n\n      this.isLoading = false;\n    },\n\n    async fetchRonTransactions() {\n      for (const {\n        UnixTimestamp,\n        From,\n        Status,\n        Txhash,\n        ValueIn,\n      } of myJsonData) {\n        // if transaction is later than last synergy week day timestamp\n        // or wasn't sent from provided addr\n        // or failed\n        // - skip\n        if (\n          UnixTimestamp > LAST_SYNERGY_BEFORE_TGE_TIMESTAMP_IN_SECONDS ||\n          From !== this.walletAddress ||\n          Status !== \"Success\"\n        ) {\n          continue;\n        }\n\n        this.matchedTransactions.push({\n          blockTime: UnixTimestamp,\n          transactionHash: Txhash,\n          value: ValueIn.toString(),\n          tokenSymbol: \"RON\",\n        });\n      }\n    },\n\n    async fetchAkdrTransactions() {\n      let page = 1;\n\n      do {\n        const transactions = await this.httpService.getAkdrLockTransactions(\n          this.walletAddress,\n          page,\n        );\n\n        if (!transactions.length) {\n          debug(\"No more AKDR lock transactions, aborting further fetching..\");\n\n          break;\n        }\n\n        for (const {\n          from,\n          value,\n          decimals,\n          blockTime,\n          tokenSymbol,\n          transactionHash,\n        } of transactions) {\n          // if transaction is later than last synergy week day timestamp\n          // or wasn't from provided wallet addr\n          // or edge case\n          // - skip\n          if (\n            from !== this.walletAddress ||\n            blockTime > LAST_SYNERGY_BEFORE_TGE_TIMESTAMP_IN_SECONDS ||\n            transactionHash === TRANSACTION_HASH_OF_KAIDRO_REVERTING_SOME_AKDR\n          ) {\n            continue;\n          }\n\n          this.matchedTransactions.push({\n            blockTime,\n            transactionHash,\n            value: decodeAkdrValue(value, decimals),\n            tokenSymbol,\n          });\n        }\n\n        // sleep between each requests to not overload network\n        await sleep(DELAY_BETWEEN_EACH_REQUEST_IN_SECONDS);\n\n        page++;\n\n        if (page > MAX_PAGES_TO_FETCH_LIMIT) {\n          debug(\n            \"Max page limit reached! Aborting further AKDR transactions fetching.\",\n          );\n\n          break;\n        }\n      } while (true);\n    },\n  },\n};\n</script>\n","<template>\r\n  <el-card shadow=\"always\">\r\n    <template #header>\r\n      <slot name=\"header\"> </slot>\r\n    </template>\r\n\r\n    <em v-if=\"isLoading\">Loading...</em>\r\n\r\n    <div v-else-if=\"data.length\">\r\n      <div\r\n        v-for=\"(item, index) in data\"\r\n        :key=\"index\"\r\n        :style=\"{ display: 'flex', justifyContent: 'space-between' }\"\r\n      >\r\n        {{ convertBlocktime(item.blockTime) }}\r\n\r\n        <div :style=\"{ display: 'flex', gap: '10px' }\">\r\n          {{ item.value }} {{ item.tokenSymbol }}\r\n\r\n          <transaction-href\r\n            :transaction-hash=\"item.transactionHash\"\r\n            text=\"txs\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <em v-else>No data</em>\r\n  </el-card>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { PropType } from \"vue\";\r\nimport TransactionHref from \"./TransactionHref.vue\";\r\nimport { useDayjsStore } from \"@/store/useDayjsStore\";\r\nimport { ITransactionSummary } from \"@/types/ITransactionSummary\";\r\n\r\nexport default {\r\n  components: {\r\n    TransactionHref,\r\n  },\r\n\r\n  props: {\r\n    isLoading: {\r\n      type: Boolean,\r\n      required: true,\r\n    },\r\n\r\n    data: {\r\n      type: Array as PropType<ITransactionSummary[]>,\r\n      required: true,\r\n    },\r\n  },\r\n\r\n  data() {\r\n    const TX_URL = process.env.FARM_TX_URL;\r\n\r\n    const dayjsStore = useDayjsStore();\r\n\r\n    return {\r\n      dayjsStore,\r\n      TRANSACTION_DETAILS_URL: TX_URL,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    convertBlocktime(blockTime: number) {\r\n      return this.dayjsStore.blockTimeToDate(blockTime);\r\n    },\r\n  },\r\n};\r\n</script>\r\n","export function decodeAkdrValue(value: string, decimals = 18) {\r\n  const valueDecimals = value.length;\r\n\r\n  const separatorIndex = valueDecimals - decimals;\r\n\r\n  const rawValue =\r\n    valueDecimals === decimals\r\n      ? `0.${value}`\r\n      : `${value.substring(0, separatorIndex)}.${value.substring(separatorIndex)}`;\r\n\r\n  return parseFloat(rawValue).toFixed(2);\r\n}\r\n","import { createApp } from \"vue\";\nimport { createPinia } from \"pinia\";\nimport ElementPlus from \"element-plus\";\n\nimport \"./style.css\";\nimport \"element-plus/dist/index.css\";\nimport \"element-plus/theme-chalk/dark/css-vars.css\";\n\nimport App from \"./App.vue\";\n\nconst pinia = createPinia();\nconst app = createApp(App);\n\napp.use(pinia);\napp.use(ElementPlus);\napp.mount(\"#app\");\n","export const MAX_PAGES_TO_FETCH_LIMIT = 15; // extra protection in case of issue when fetching transactions\n\nexport const LAST_SYNERGY_BEFORE_TGE_TIMESTAMP_IN_SECONDS = 1734220799; // 14.12.24 23:59 GMT\n\nexport const DELAY_BETWEEN_EACH_REQUEST_IN_SECONDS = 2;\n\nexport const TRANSACTION_HASH_OF_KAIDRO_REVERTING_SOME_AKDR =\n  \"0x088ec163713befe808c985e644e203c1d69c618a11dd091d6df2b04524d9e947\";\n\n// 12 AM UTC = 1 AM GMT :eyes:\nexport const RAW_SYNERGY_WEEKS = [\n  {\n    from: \"2024-08-01 00:00 GMT\",\n    to: \"2024-08-10 01:00 GMT\",\n  },\n\n  {\n    from: \"2024-08-10 01:01 GMT\",\n    to: \"2024-08-17 01:00 GMT\",\n  },\n\n  {\n    from: \"2024-08-17 01:01 GMT\",\n    to: \"2024-08-24 01:00 GMT\",\n  },\n\n  {\n    from: \"2024-08-24 01:01 GMT\",\n    to: \"2024-08-31 01:00 GMT\",\n  },\n\n  // ----\n\n  {\n    from: \"2024-09-01 00:00 GMT\",\n    to: \"2024-09-07 01:00 GMT\",\n  },\n\n  {\n    from: \"2024-09-07 01:01 GMT\",\n    to: \"2024-09-14 01:00 GMT\",\n  },\n\n  {\n    from: \"2024-09-14 01:01 GMT\",\n    to: \"2024-09-21 01:00 GMT\",\n  },\n\n  {\n    from: \"2024-09-21 01:01 GMT\",\n    to: \"2024-09-28 01:00 GMT\",\n  },\n\n  // ----\n\n  {\n    from: \"2024-10-01 00:00 GMT\",\n    to: \"2024-10-12 01:00 GMT\",\n  },\n\n  {\n    from: \"2024-10-12 01:01 GMT\",\n    to: \"2024-10-19 01:00 GMT\",\n  },\n\n  {\n    from: \"2024-10-19 01:01 GMT\",\n    to: \"2024-10-26 01:00 GMT\",\n  },\n\n  {\n    from: \"2024-10-26 01:01 GMT\",\n    to: \"2024-10-31 01:00 GMT\",\n  },\n\n  // ----\n\n  {\n    from: \"2024-11-01 00:00 GMT\",\n    to: \"2024-11-09 01:00 GMT\",\n  },\n\n  {\n    from: \"2024-11-09 01:01 GMT\",\n    to: \"2024-11-16 01:00 GMT\",\n  },\n\n  {\n    from: \"2024-11-16 01:01 GMT\",\n    to: \"2024-11-23 01:00 GMT\",\n  },\n\n  {\n    from: \"2024-11-23 01:01 GMT\",\n    to: \"2024-11-30 01:00 GMT\",\n  },\n\n  // ----\n\n  {\n    from: \"2024-12-01 00:00 GMT\",\n    to: \"2024-12-07 01:00 GMT\",\n  },\n\n  {\n    from: \"2024-12-07 01:01 GMT\",\n    to: \"2024-12-14 01:00 GMT\",\n  },\n\n  // TGE (18.12)\n];\n","import axios from \"axios\";\nimport { defineStore } from \"pinia\";\n\nimport { IRonTransaction } from \"@/types/IRonTransaction\";\nimport { IAkdrTransaction } from \"@/types/IAkdrTransaction\";\nimport type { IResponseWrapper } from \"@/types/IResponseWrapper\";\nimport { getOffsetByPageNumber } from \"@/helpers/getOffsetByPageNumber\";\n\nconst TRANSACTIONS_PER_REQUEST_LIMIT = 100;\n\nconst BASE_URL = \"https://skynet-api.roninchain.com/ronin/explorer/v2\";\nconst KAIDRO_AKDR_ADDRESS = \"0xe3c587e40e9b89b3f2af526c9d468d49a66e3c2d\";\nconst KAIDRO_RON_ADDRESS = \"0xfd7ee5e1dfa1990c3cc6742eaae4bcf1ff6b516e\";\n\nexport const useHttpServiceStore = defineStore(\"useHttpServiceStore\", () => {\n  return {\n    async getAkdrLockTransactions(walletAddress: string, page = 1) {\n      const {\n        data: {\n          result: { items },\n        },\n      } = await axios.get<IResponseWrapper<IAkdrTransaction>>(\n        `${BASE_URL}/accounts/${walletAddress}/tokens/${KAIDRO_AKDR_ADDRESS}/transfers`,\n        {\n          params: {\n            offset: getOffsetByPageNumber(page, TRANSACTIONS_PER_REQUEST_LIMIT),\n            limit: TRANSACTIONS_PER_REQUEST_LIMIT,\n          },\n        },\n      );\n\n      return items;\n    },\n\n    // @DEPRECATED\n    async getRonLockTransactions(page = 1) {\n      const {\n        data: {\n          result: { items },\n        },\n      } = await axios.get<IResponseWrapper<IRonTransaction>>(\n        `${BASE_URL}/accounts/${KAIDRO_RON_ADDRESS}/txs`,\n        {\n          params: {\n            offset: getOffsetByPageNumber(page, TRANSACTIONS_PER_REQUEST_LIMIT),\n            limit: TRANSACTIONS_PER_REQUEST_LIMIT,\n          },\n        },\n      );\n\n      return items;\n    },\n  };\n});\n","\nexport default (sfc, props) => {\n  const target = sfc.__vccOpts || sfc;\n  for (const [key, val] of props) {\n    target[key] = val;\n  }\n  return target;\n}\n","import dayjs from \"dayjs\";\r\nimport utc from \"dayjs/plugin/utc\";\r\nimport { defineStore } from \"pinia\";\r\nimport timezone from \"dayjs/plugin/timezone\";\r\n\r\ndayjs.extend(utc);\r\ndayjs.extend(timezone);\r\n\r\nexport const useDayjsStore = defineStore(\"useDayjsStore\", () => {\r\n  return {\r\n    blockTimeToDate(value: number, format = \"DD MMM YYYY\") {\r\n      return dayjs(value * 1000).format(format);\r\n    },\r\n\r\n    parseToTimezoneAndFormat(\r\n      value: string,\r\n      format = \"DD MMM YYYY HH:mm\",\r\n      timezone = \"GMT\",\r\n    ) {\r\n      return dayjs(value).tz(timezone).format(format);\r\n    },\r\n\r\n    getTimestampInSeconds(value: string) {\r\n      return dayjs(value).unix();\r\n    },\r\n  };\r\n});\r\n","export function getOffsetByPageNumber(page: number, limit = 100) {\r\n  if (page < 0 || Number.isNaN(page)) {\r\n    throw new Error(\"Invalid page number!\");\r\n  }\r\n\r\n  return page === 1 ? 0 : (page - 1) * limit;\r\n}\r\n"],"names":[],"mappings":"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"}